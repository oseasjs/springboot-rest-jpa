spring:
  application:
    name: springboot-rest-jpa
  mvc:
    pathmatch:
      matching-strategy: ANT_PATH_MATCHER
  jackson:
    serialization:
      write_dates_as_timestamps: false
      FAIL_ON_EMPTY_BEANS: false
  h2:
    console:
      enabled: true
  datasource:
    url: "jdbc:h2:mem:blog;DB_CLOSE_ON_EXIT=FALSE;MODE=PostgreSQL;INIT=CREATE SCHEMA IF NOT EXISTS blog\\;CREATE SCHEMA IF NOT EXISTS audit"
    username: sa
    password: sa
    driverClassName: org.h2.Driver
  jpa:
    database-platform: org.hibernate.dialect.H2Dialect
    generate-ddl: false
    show-sql: true
    properties:
      org:
        hibernate:
          show_sql: true
          format_sql: true
          envers:
            default_schema: audit
  flyway:
    default-schema: blog
  kafka:
    bootstrap-servers: ${kafka_bootstrap_servers:localhost:29092}
    consumer:
      client-id: springboot-kafka
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      max-poll-records: 1
      fetch-max-wait: 36000
      enable-auto-commit: false
    producer:
      client-id: springboot-kafka
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      retries: 3
    listener:
      poll-timeout: 1800000
      concurrency: 1
      ack-mode: manual_immediate

security:
  jwt:
    secret-key: mysecret

springdoc:
  swagger-ui:
    path: /swagger-ui.html

logging:
  level:
    org.hibernate.envers.boot: ERROR
    org.apache.kafka.clients: ERROR

management:
  endpoints:
    web:
      exposure:
        include: '*'
  endpoint:
    restart:
      enabled: true

jplaceholder:
  url: https://jsonplaceholder.typicode.com

blog:
  kafka:
    post:
      topic: POST
      prefix: postConsumer
      group-id: postConsumerGroupId
    comment:
      topic: COMMENT
      prefix: commentConsumer
      group-id: commentConsumerGroupId
  moderation:
    post:
      fixed-rate: 15000 # Every 15 seconds
    comment:
      cron: 0/20 * * * * * # Every 20 seconds
  cache:
    ttl: 50000 # 50 seconds



